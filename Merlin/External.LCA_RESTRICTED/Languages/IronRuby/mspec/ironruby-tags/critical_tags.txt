core\argf\gets_tags.txt:0:critical:ARGF.gets
core\array\comparison_tags.txt:0:critical:Array#<=> properly handles recursive arrays
core\array\eql_tags.txt:0:critical:Array#eql? properly handles recursive arrays
core\array\equal_value_tags.txt:0:critical:Array#== properly handles recursive arrays
core\array\hash_tags.txt:0:critical:Array#hash properly handles recursive arrays
core\array\hash_tags.txt:0:critical:Array#hash properly handles recursive arrays
core\array\intersection_tags.txt:0:critical:Array#& properly handles recursive arrays
core\array\join_tags.txt:0:critical:Array#join raises a NoMethodError if an element does not respond to #to_s 
core\array\multiply_tags.txt:0:critical:Array#* raises a NoMethodError if an element does not respond to #to_s
core\array\union_tags.txt:0:critical:Array#| properly handles recursive arrays
core\array\uniq_tags.txt:0:critical:Array#uniq properly handles recursive arrays
core\array\uniq_tags.txt:0:critical:Array#uniq! properly handles recursive arrays
core\thread\critical_tags.txt:0:critical:Thread.critical= defers exit until Thread.pass
core\thread\critical_tags.txt:0:critical:Thread.critical= can be mismatched
core\thread\raise_tags.txt:0:critical:Thread#raise on another thread re-raises active exception
language\method_tags.txt:0:critical:Calling a method fails with both lambda and block argument
library\net\ftp\get_tags.txt:0:critical:Net::FTP#get (binary mode)
library\net\ftp\getbinaryfile_tags.txt:0:critical:Net::FTP#getbinaryfile
library\net\ftp\retrbinary_tags.txt:0:critical:Net::FTP#retrbinary
library\net\http\http\get_print_tags.txt:0:critical:Net::HTTP.get_print when passed URI it prints the body of the specified uri to $stdout
library\net\http\http\get_print_tags.txt:0:critical:Net::HTTP.get_print when passed host, path, port it prints the body of the specified uri to $stdout
library\net\http\http\lock_tags.txt:0:critical:Net::HTTP#lock sends a LOCK request to the passed path and returns the response
library\net\http\http\post_form_tags.txt:0:critical:Net::HTTP.post_form when passed URI POSTs the passed form data to the given uri
library\net\http\http\post_tags.txt:0:critical:Net::HTTP#post
library\net\http\http\propfind_tags.txt:0:critical:Net::HTTP#propfind
library\net\http\http\proppatch_tags.txt:0:critical:Net::HTTP#proppatch
library\net\http\http\put_tags.txt:0:critical:Net::HTTP#put
library\net\http\http\request_tags.txt:0:critical:Net::HTTP#request
library\net\http\http\send_request_tags.txt:0:critical:Net::HTTP#send_request
library\net\http\http\unlock_tags.txt:0:critical:Net::HTTP#unlock
library\resolv\get_address_tags.txt:0:critical:Resolv#getaddress
library\resolv\get_addresses_tags.txt:0:critical:Resolv#getaddresses
library\resolv\get_name_tags.txt:0:critical:Resolv#getname
library\resolv\get_names_tags.txt:0:critical:Resolv#getnames
library\scanf\io\block_scanf_tags.txt:0:critical:IO#block_scanf passes each match to the block as an array
library\scanf\io\scanf_tags.txt:0:critical:IO#scanf with block passes each match to the block as an array
library\socket\basicsocket\recv_tags.txt:0:critical:BasicSocket#recv receives a specified number of bytes of a message from another socket
library\socket\basicsocket\recv_tags.txt:0:critical:BasicSocket#recv accepts flags to specify unusual receiving behaviour
